#!/usr/bin/env python3
# -*- coding: utf-8 -*-
"""
Gerador Excel - Abas 2 e 3 do Sistema FIDC Energisa
====================================================
Aba 2: Dicion√°rio de Dados
Aba 3: C√°lculos e Metodologia
"""

import pandas as pd
import openpyxl
from openpyxl.styles import Font, Alignment, PatternFill, Border, Side
from datetime import datetime
import os

def criar_excel_documentacao():
    """
    Cria arquivo Excel com documenta√ß√£o completa
    """
    print("üîã ENERGISA FIDC - Gerando Excel Documenta√ß√£o")
    print("=" * 50)
    
    # Criar workbook
    wb = openpyxl.Workbook()
    
    # Remover aba padr√£o
    default_sheet = wb.active
    wb.remove(default_sheet)
    
    # Estilos
    estilo_cabecalho = {
        'font': Font(bold=True, color="FFFFFF", size=12),
        'fill': PatternFill(start_color="366092", end_color="366092", fill_type="solid"),
        'alignment': Alignment(horizontal="center", vertical="center"),
        'border': Border(
            left=Side(style='thin'),
            right=Side(style='thin'),
            top=Side(style='thin'),
            bottom=Side(style='thin')
        )
    }
    
    estilo_dados = {
        'font': Font(size=10),
        'alignment': Alignment(horizontal="left", vertical="center"),
        'border': Border(
            left=Side(style='thin'),
            right=Side(style='thin'),
            top=Side(style='thin'),
            bottom=Side(style='thin')
        )
    }
    
    # ============ ABA 2: DICION√ÅRIO DE DADOS ============
    ws2 = wb.create_sheet("2. Dicion√°rio de Dados")
    
    # T√≠tulo
    ws2['A1'] = "üìö DICION√ÅRIO DE DADOS - DataFrame Final FIDC"
    ws2['A1'].font = Font(bold=True, size=16, color="1F4E79")
    ws2.merge_cells('A1:E1')
    
    # Cabe√ßalhos
    headers = ['#', 'Nome da Coluna', 'Tipo de Dado', 'Descri√ß√£o', 'Observa√ß√µes']
    for col_idx, header in enumerate(headers, 1):
        cell = ws2.cell(row=3, column=col_idx, value=header)
        cell.font = estilo_cabecalho['font']
        cell.fill = estilo_cabecalho['fill']
        cell.alignment = estilo_cabecalho['alignment']
        cell.border = estilo_cabecalho['border']
    
    # Dicion√°rio de dados
    dicionario_dados = [
        # GRUPO 1: Dados B√°sicos do Cliente
        (1, "nome_cliente", "Texto", "Nome do cliente titular da conta", "Campo obrigat√≥rio para identifica√ß√£o"),
        (2, "documento", "Num√©rico", "CPF/CNPJ do cliente", "Frequentemente vazio nos dados"),
        (3, "contrato", "Num√©rico", "N√∫mero do contrato de energia", "Identificador √∫nico do contrato"),
        (4, "classe", "Texto", "Classifica√ß√£o do cliente", "Residencial, Comercial, Industrial, Rural"),
        (5, "situacao", "Texto", "Status atual do cliente", "Ativo, Desligado, Suspenso"),
        (6, "valor_principal", "Num√©rico", "Valor original da d√≠vida", "Valor base antes de dedu√ß√µes"),
        (7, "valor_nao_cedido", "Num√©rico", "Parcela n√£o cedida ao FIDC", "Valor retido pela distribuidora"),
        (8, "valor_terceiro", "Num√©rico", "Valores de terceiros", "Tributos, taxas de terceiros"),
        (9, "valor_cip", "Num√©rico", "Valor CIP", "Contribui√ß√£o de Ilumina√ß√£o P√∫blica"),
        
        # GRUPO 2: Metadados e Controle
        (10, "data_vencimento", "Data", "Data original de vencimento", "Formato timestamp original"),
        (11, "empresa", "Texto", "C√≥digo da distribuidora", "ESS, EMR, etc."),
        (12, "tipo", "Texto", "Classifica√ß√£o do neg√≥cio", "Privado, P√∫blico, Hospital"),
        (13, "status", "Texto", "Status da cobran√ßa", "Cobr√°vel, Incobr√°vel, Em an√°lise"),
        (14, "id_padronizado", "Texto", "Identificador √∫nico gerado", "Chave prim√°ria para rastreamento"),
        (15, "base_origem", "Texto", "Arquivo de origem dos dados", "Rastreabilidade da fonte"),
        (16, "data_base", "Data", "Data de refer√™ncia para c√°lculos", "Data fixa para todos os c√°lculos"),
        
        # GRUPO 3: Aging e Temporalidade
        (17, "data_vencimento_limpa", "Data", "Data de vencimento padronizada", "Formato YYYY-MM-DD limpo"),
        (18, "dias_atraso", "Inteiro", "Dias entre vencimento e data base", "C√°lculo: data_base - data_vencimento"),
        (19, "aging", "Texto", "Classifica√ß√£o de aging", "9 faixas: A vencer at√© >1080 dias"),
        
        # GRUPO 4: Valores Limpos e L√≠quidos
        (20, "valor_principal_limpo", "Num√©rico", "Valor principal sem formata√ß√£o", "Num√©rico puro"),
        (21, "valor_nao_cedido_limpo", "Num√©rico", "Valor n√£o cedido limpo", "Num√©rico puro"),
        (22, "valor_terceiro_limpo", "Num√©rico", "Valor terceiros limpo", "Num√©rico puro"),
        (23, "valor_cip_limpo", "Num√©rico", "Valor CIP limpo", "Num√©rico puro"),
        (24, "valor_liquido", "Num√©rico", "Valor l√≠quido final", "F√≥rmula: principal - nao_cedido - terceiro - cip"),
        
        # GRUPO 5: Corre√ß√£o Monet√°ria
        (25, "multa", "Num√©rico", "Multa calculada", "F√≥rmula: valor_liquido √ó 2%"),
        (26, "meses_atraso", "Num√©rico", "Meses de atraso calculados", "dias_atraso √∑ 30"),
        (27, "juros_moratorios", "Num√©rico", "Juros morat√≥rios", "F√≥rmula: valor_liquido √ó 1% √ó meses"),
        (28, "indice_vencimento", "Num√©rico", "√çndice IGP-M no vencimento", "Obtido da tabela hist√≥rica"),
        (29, "indice_base", "Num√©rico", "√çndice IGP-M na data base", "√çndice de refer√™ncia (data_base)"),
        (30, "fator_correcao", "Num√©rico", "Fator de corre√ß√£o monet√°ria", "F√≥rmula: indice_base √∑ indice_vencimento"),
        (31, "correcao_monetaria", "Num√©rico", "Corre√ß√£o monet√°ria aplicada", "F√≥rmula: valor_liquido √ó (fator_correcao - 1)"),
        (32, "valor_corrigido", "Num√©rico", "Valor final corrigido", "F√≥rmula: valor_liquido + multa + juros + corre√ß√£o"),
        
        # GRUPO 6: Taxa de Recupera√ß√£o e Valor Justo
        (33, "aging_taxa", "Texto", "Aging mapeado para taxa", "Mapeamento: >1080 dias ‚Üí Demais anos"),
        (34, "taxa_recuperacao", "Num√©rico", "Taxa de recupera√ß√£o esperada", "Taxa decimal obtida via merge por Empresa√óTipo√óAging"),
        (35, "prazo_recebimento", "Num√©rico", "Prazo esperado de recebimento", "Meses at√© recebimento (da tabela recupera√ß√£o)"),
        (36, "valor_recuperavel", "Num√©rico", "Valor esperado de recupera√ß√£o", "F√≥rmula: valor_corrigido √ó taxa_recuperacao"),
        
        # GRUPO 7: C√°lculo DI-PRE e Valor Justo
        (37, "taxa_di_pre", "Num√©rico", "Taxa DI-PRE da BMF", "Taxa extra√≠da do arquivo BMF para prazo espec√≠fico"),
        (38, "fator_exponencial_di_pre", "Num√©rico", "Fator exponencial DI-PRE", "F√≥rmula: (1 + taxa_di_pre)^(prazo_recebimento/12)"),
        (39, "data_vencimento", "Data", "Data vencimento para valor justo", "Data base + 6 meses (refer√™ncia para multa)"),
        (40, "dias_atraso", "Inteiro", "Dias de atraso para valor justo", "Diferen√ßa entre hoje e data_vencimento"),
        (41, "multa_para_justo", "Num√©rico", "Multa proporcional valor justo", "0.01/30 √ó dias_atraso ou 6% se atraso = 0"),
        (42, "valor_justo", "Num√©rico", "Valor justo final com DI-PRE", "VC √ó Taxa_Rec √ó (Fator_Exp_DI_PRE + Multa_Prop)")
    ]
    
    # Inserir dados do dicion√°rio
    for row_idx, (num, coluna, tipo, descricao, obs) in enumerate(dicionario_dados, 4):
        # Aplicar cores alternadas
        fill_color = "F2F2F2" if row_idx % 2 == 0 else "FFFFFF"
        
        cells = [
            ws2.cell(row=row_idx, column=1, value=num),
            ws2.cell(row=row_idx, column=2, value=coluna),
            ws2.cell(row=row_idx, column=3, value=tipo),
            ws2.cell(row=row_idx, column=4, value=descricao),
            ws2.cell(row=row_idx, column=5, value=obs)
        ]
        
        for cell in cells:
            cell.border = estilo_dados['border']
            cell.alignment = estilo_dados['alignment']
            cell.font = estilo_dados['font']
            cell.fill = PatternFill(start_color=fill_color, end_color=fill_color, fill_type="solid")
    
    # Ajustar largura das colunas
    ws2.column_dimensions['A'].width = 5
    ws2.column_dimensions['B'].width = 25
    ws2.column_dimensions['C'].width = 12
    ws2.column_dimensions['D'].width = 40
    ws2.column_dimensions['E'].width = 35
    
    # ============ ABA 3: C√ÅLCULOS E METODOLOGIA ============
    ws3 = wb.create_sheet("3. C√°lculos e Metodologia")
    
    # T√≠tulo
    ws3['A1'] = "üßÆ METODOLOGIA DE C√ÅLCULOS FIDC - ENERGISA"
    ws3['A1'].font = Font(bold=True, size=16, color="1F4E79")
    ws3.merge_cells('A1:F1')
    
    linha_atual = 3
    
    # Se√ß√µes explicativas
    secoes = [
        {
            'titulo': '1. VIS√ÉO GERAL DO SISTEMA',
            'conteudo': [
                'O sistema FIDC Calculator implementa metodologia rigorosa para c√°lculo de valor justo',
                'de carteiras de receb√≠veis de distribuidoras de energia el√©trica brasileiras.',
                '',
                'COMPONENTES PRINCIPAIS:',
                '‚Ä¢ Aging (classifica√ß√£o temporal da inadimpl√™ncia)',
                '‚Ä¢ Corre√ß√£o monet√°ria (IGP-M at√© mai/2021, IPCA ap√≥s jun/2021)',
                '‚Ä¢ Juros morat√≥rios (1% ao m√™s, proporcional)',
                '‚Ä¢ Multa contratual (2% sobre valor l√≠quido)',
                '‚Ä¢ Taxa de recupera√ß√£o (baseada em hist√≥rico setorial)',
                '‚Ä¢ Valor presente (desconto pelo prazo de recebimento)'
            ]
        },
        {
            'titulo': '2. C√ÅLCULO DE AGING',
            'conteudo': [
                'OBJETIVO: Classificar cada d√≠vida pelo tempo de inadimpl√™ncia',
                '',
                'F√ìRMULA: Dias de Atraso = Data Base - Data de Vencimento',
                '',
                'CLASSIFICA√á√ïES:',
                '‚Ä¢ A vencer: DA ‚â§ 0 (ainda n√£o vencido)',
                '‚Ä¢ Menor que 30 dias: 0 < DA ‚â§ 30',
                '‚Ä¢ De 31 a 59 dias: 30 < DA ‚â§ 59',
                '‚Ä¢ De 60 a 89 dias: 59 < DA ‚â§ 89',
                '‚Ä¢ De 90 a 119 dias: 89 < DA ‚â§ 119',
                '‚Ä¢ De 120 a 359 dias: 119 < DA ‚â§ 359 (CONCENTRA√á√ÉO DE VALOR)',
                '‚Ä¢ De 360 a 719 dias: 359 < DA ‚â§ 719',
                '‚Ä¢ De 720 a 1080 dias: 719 < DA ‚â§ 1080',
                '‚Ä¢ Maior que 1080 dias: DA > 1080'
            ]
        },
        {
            'titulo': '3. CORRE√á√ÉO MONET√ÅRIA',
            'conteudo': [
                'OBJETIVO: Recompor poder de compra considerando infla√ß√£o oficial',
                '',
                'METODOLOGIA H√çBRIDA ATUAL:',
                '‚Ä¢ IGP-M: para datas ‚â§ maio/2021 (√≠ndice base 624.40)',
                '‚Ä¢ IPCA: para datas > maio/2021 (√≠ndice base 1069.29)',
                '',
                'F√ìRMULA: CM = Valor L√≠quido √ó (√çndice Base √∑ √çndice Vencimento - 1)',
                '',
                '√çNDICES UTILIZADOS:',
                '‚Ä¢ IGP-M: Base hist√≥rica at√© maio/2021',
                '‚Ä¢ IPCA: Via API SIDRA/IBGE a partir de junho/2021',
                '',
                'APLICA√á√ÉO: Apenas para valores em atraso (dias_atraso > 0)',
                'PROTE√á√ÉO: Corre√ß√£o sempre ‚â• 0 (sem defla√ß√£o)'
            ]
        },
        {
            'titulo': '4. JUROS E MULTAS',
            'conteudo': [
                'MULTA CONTRATUAL:',
                '‚Ä¢ Taxa: 2% sobre valor l√≠quido',
                '‚Ä¢ Aplica√ß√£o: Uma √∫nica vez para valores em atraso',
                '‚Ä¢ F√≥rmula: M = VL √ó 0,02 √ó I(DA > 0)',
                '',
                'JUROS MORAT√ìRIOS:',
                '‚Ä¢ Taxa: 1% ao m√™s',
                '‚Ä¢ C√°lculo proporcional por dias',
                '‚Ä¢ F√≥rmula: J = VL √ó 0,01 √ó (DA √∑ 30) √ó I(DA > 0)',
                '',
                'VALOR CORRIGIDO TOTAL:',
                'VC = Valor L√≠quido + Multa + Juros + Corre√ß√£o Monet√°ria'
            ]
        },
        {
            'titulo': '5. TAXAS DE RECUPERA√á√ÉO',
            'conteudo': [
                'OBJETIVO: Estimar probabilidade de recupera√ß√£o efetiva por aging',
                '',
                'MAPEAMENTO DE AGING PARA TAXAS:',
                '‚Ä¢ A vencer ‚Üí A vencer',
                '‚Ä¢ Menor que 30 dias ‚Üí Primeiro ano', 
                '‚Ä¢ De 31 a 59 dias ‚Üí Primeiro ano',
                '‚Ä¢ De 60 a 89 dias ‚Üí Primeiro ano',
                '‚Ä¢ De 90 a 119 dias ‚Üí Primeiro ano',
                '‚Ä¢ De 120 a 359 dias ‚Üí Primeiro ano (CONCENTRA√á√ÉO)',
                '‚Ä¢ De 360 a 719 dias ‚Üí Segundo ano',
                '‚Ä¢ De 720 a 1080 dias ‚Üí Terceiro ano',
                '‚Ä¢ Maior que 1080 dias ‚Üí Demais anos',
                '',
                'FONTE: Tabela de recupera√ß√£o por Empresa √ó Tipo √ó Aging',
                'APLICA√á√ÉO: Merge autom√°tico baseado em chaves compostas',
                'FALLBACK: Taxa 0% para combina√ß√µes n√£o encontradas'
            ]
        },
        {
            'titulo': '6. VALOR JUSTO (C√ÅLCULO COM DI-PRE)',
            'conteudo': [
                'OBJETIVO: Determinar valor presente usando taxas DI-PRE da BMF',
                '',
                'METODOLOGIA ATUALIZADA:',
                '‚Ä¢ Utiliza dados reais de DI√óPRE da BMF Bovespa',
                '‚Ä¢ Aplica√ß√£o de progress√£o exponencial por prazo',
                '‚Ä¢ Incorpora√ß√£o de multa proporcional por atraso',
                '',
                'F√ìRMULA COMPLETA:',
                'VJ = Valor_Corrigido √ó Taxa_Recupera√ß√£o √ó (Fator_Exponencial_DI_PRE + Multa_Proporcional)',
                '',
                'COMPONENTES:',
                '‚Ä¢ Fator_Exponencial_DI_PRE = (1 + taxa_di_pre)^(prazo_recebimento/12)',
                '‚Ä¢ Multa_Proporcional = 0.01/30 √ó dias_atraso (fallback: 6% se atraso = 0)',
                '‚Ä¢ Taxa_DI_PRE: extra√≠da de arquivo BMF para prazo espec√≠fico',
                '',
                'PRAZOS DE RECEBIMENTO:',
                '‚Ä¢ Baseados na tabela de recupera√ß√£o por aging',
                '‚Ä¢ Varia√ß√£o t√≠pica: 6 a 42 meses',
                '',
                'FONTE: Arquivos PRE (DI√óPRE) da BMF Bovespa'
            ]
        },
        {
            'titulo': '7. ENCADEAMENTO DOS C√ÅLCULOS ATUAL',
            'conteudo': [
                'SEQU√äNCIA L√ìGICA IMPLEMENTADA:',
                '',
                '1. VALOR L√çQUIDO = Principal - N√£o Cedido - Terceiros - CIP',
                '2. AGING = Classifica√ß√£o por dias de atraso (9 faixas)',
                '3. MULTA = VL √ó 2% (apenas se dias_atraso > 0)',
                '4. JUROS = VL √ó 1% √ó (dias_atraso √∑ 30) (apenas se atraso > 0)',
                '5. CORRE√á√ÉO = VL √ó (√çndice_Base √∑ √çndice_Vencimento - 1)',
                '6. VALOR CORRIGIDO = VL + Multa + Juros + Corre√ß√£o',
                '7. AGING_TAXA = Mapeamento aging ‚Üí categoria recupera√ß√£o',
                '8. TAXA_RECUPERA√á√ÉO = Merge com tabela (Empresa √ó Tipo √ó Aging)',
                '9. VALOR_RECUPER√ÅVEL = VC √ó Taxa_Recupera√ß√£o',
                '10. TAXA_DI_PRE = Busca em arquivo BMF por prazo_recebimento',
                '11. FATOR_EXPONENCIAL = (1 + taxa_di_pre)^(prazo/12)',
                '12. MULTA_PROPORCIONAL = (0.01/30) √ó dias_atraso ou 6%',
                '13. VALOR_JUSTO = VC √ó Taxa_Rec √ó (Fator_Exp + Multa_Prop)',
                '',
                'RESULTADO: Valor justo considerando cen√°rio macroecon√¥mico atual'
            ]
        },
        {
            'titulo': '8. FATORES DE INFLU√äNCIA E INOVA√á√ïES',
            'conteudo': [
                'COMPOSI√á√ÉO DA CARTEIRA:',
                '‚Ä¢ Concentra√ß√£o em aging 120-359 dias ainda maximiza valor',
                '‚Ä¢ Carteiras antigas (>3 anos) t√™m recupera√ß√£o limitada',
                '‚Ä¢ Mix equilibrado otimiza rela√ß√£o risco-retorno',
                '',
                'INOVA√á√ïES DO SISTEMA ATUAL:',
                '‚Ä¢ Uso de taxas DI-PRE reais da BMF em tempo real',
                '‚Ä¢ C√°lculo exponencial baseado em prazo espec√≠fico',
                '‚Ä¢ Multa proporcional por dias de atraso efetivos',
                '‚Ä¢ Mapeamento autom√°tico aging ‚Üí categoria recupera√ß√£o',
                '',
                'CONDI√á√ïES MACROECON√îMICAS:',
                '‚Ä¢ Taxa DI-PRE reflete cen√°rio atual do mercado',
                '‚Ä¢ IPCA atualizado via API SIDRA para m√°xima precis√£o',
                '‚Ä¢ Progress√£o exponencial captura efeito compound',
                '',
                'CARACTER√çSTICAS SETORIAIS:',
                '‚Ä¢ Essencialidade do servi√ßo mant√©m taxas de recupera√ß√£o',
                '‚Ä¢ Regulamenta√ß√£o espec√≠fica influencia prazos de cobran√ßa',
                '‚Ä¢ Sazonalidade considerada nos prazos de recebimento'
            ]
        },
        {
            'titulo': '9. RESULTADOS ESPERADOS E VALIDA√á√ÉO',
            'conteudo': [
                'FAIXAS DE VALOR JUSTO ATUALIZADAS:',
                '',
                'POR AGING (com DI-PRE atual):',
                '‚Ä¢ Primeiro ano: Taxa DI-PRE √ó progress√£o exponencial',
                '‚Ä¢ Segundo ano: Taxas menores devido ao maior prazo',
                '‚Ä¢ Terceiro ano: Impacto significativo da progress√£o temporal',
                '‚Ä¢ Acima de 3 anos: Valores residuais com alta incerteza',
                '',
                'VALIDA√á√ÉO DO SISTEMA:',
                '‚Ä¢ Compara√ß√£o com benchmarks de mercado FIDC',
                '‚Ä¢ An√°lise de sensibilidade por cen√°rio macroecon√¥mico',
                '‚Ä¢ Valida√ß√£o cruzada Empresa √ó Tipo √ó Aging',
                '',
                'OUTPUTS DE CONTROLE:',
                '‚Ä¢ Percentual de registros com taxa de recupera√ß√£o aplicada',
                '‚Ä¢ Estat√≠sticas de match autom√°tico aging ‚Üí categoria',
                '‚Ä¢ Distribui√ß√£o de prazos de recebimento por carteira',
                '',
                'M√âTRICAS DE QUALIDADE:',
                'Sistema reporta % de sucesso em cada etapa de c√°lculo'
            ]
        }
    ]
    
    # Inserir se√ß√µes
    for secao in secoes:
        # T√≠tulo da se√ß√£o
        ws3.cell(row=linha_atual, column=1, value=secao['titulo']).font = Font(bold=True, size=12, color="1F4E79")
        linha_atual += 2
        
        # Conte√∫do da se√ß√£o
        for linha_conteudo in secao['conteudo']:
            ws3.cell(row=linha_atual, column=1, value=linha_conteudo).font = Font(size=10)
            linha_atual += 1
        
        linha_atual += 2  # Espa√ßo entre se√ß√µes
    
    # Ajustar largura da coluna
    ws3.column_dimensions['A'].width = 100
    
    # Salvar arquivo
    timestamp = datetime.now().strftime("%Y%m%d_%H%M%S")
    nome_arquivo = f"FIDC_Documentacao_Abas_2_3_{timestamp}.xlsx"
    
    try:
        wb.save(nome_arquivo)
        print(f"‚úÖ Arquivo Excel criado com sucesso!")
        print(f"üìÅ Nome: {nome_arquivo}")
        print(f"üìã Cont√©m:")
        print(f"   ‚Ä¢ Aba 2: Dicion√°rio completo das 42 colunas")
        print(f"   ‚Ä¢ Aba 3: Metodologia detalhada dos c√°lculos")
        print(f"üéØ Arquivo pronto para uso!")
        return nome_arquivo
    except Exception as e:
        print(f"‚ùå Erro ao salvar arquivo: {e}")
        return None

if __name__ == "__main__":
    criar_excel_documentacao()
