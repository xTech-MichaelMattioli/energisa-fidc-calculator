"""
Parâmetros de correção monetária para o cálculo FIDC
Baseado no notebook original
"""

import json
import pandas as pd
import sidrapy
from datetime import datetime
from typing import Dict


class ParametrosCorrecao:
    """
    Parâmetros específicos para correção monetária,
    utilizando IGP-M até 2021.05 e IPCA a partir de 2021.06.
    """

    def __init__(self, valor_base_ipca: float = 1069.29):
        # PARÂMETROS FINANCEIROS
        self.taxa_multa = 0.02           # 2% de multa
        self.taxa_juros_mensal = 0.01    # 1% ao mês

        # DATA DE REFERÊNCIA PADRÃO (pode ser ajustada por distribuidora)
        self.data_base_padrao = datetime(2025, 4, 30)

        # ARMAZENAMENTO DE ÍNDICES
        self.indices_igpm = self._carregar_igpm()
        self.indices_ipca = self._calcular_ipca_acumulado(valor_base_ipca)

    def _carregar_igpm(self):
        """Carrega os índices IGP-M acumulados até 2021.05."""
        try:
            # Tentar carregar do arquivo local
            with open('BASE_DADOS/igpm_1994_08_2021_05.json', encoding='utf-8') as f:
                return json.load(f)
        except FileNotFoundError:
            # Dados IGPM padrão caso arquivo não seja encontrado
            return {
                "1994.08": 1.0, "1994.09": 1.028, "1994.10": 1.074, "1994.11": 1.12, "1994.12": 1.158,
                "1995.01": 1.197, "1995.02": 1.216, "1995.03": 1.242, "1995.04": 1.26, "1995.05": 1.282,
                "1995.06": 1.328, "1995.07": 1.387, "1995.08": 1.403, "1995.09": 1.408, "1995.10": 1.418,
                "1995.11": 1.439, "1995.12": 1.459, "1996.01": 1.486, "1996.02": 1.497, "1996.03": 1.502,
                "1996.04": 1.509, "1996.05": 1.522, "1996.06": 1.537, "1996.07": 1.553, "1996.08": 1.557,
                "1996.09": 1.558, "1996.10": 1.562, "1996.11": 1.567, "1996.12": 1.572, "1997.01": 1.587,
                "1997.02": 1.593, "1997.03": 1.599, "1997.04": 1.602, "1997.05": 1.604, "1997.06": 1.609,
                "1997.07": 1.614, "1997.08": 1.613, "1997.09": 1.617, "1997.10": 1.619, "1997.11": 1.622,
                "1997.12": 1.628, "1998.01": 1.635, "1998.02": 1.639, "1998.03": 1.643, "1998.04": 1.646,
                "1998.05": 1.651, "1998.06": 1.653, "1998.07": 1.655, "1998.08": 1.652, "1998.09": 1.651,
                "1998.10": 1.652, "1998.11": 1.655, "1998.12": 1.658, "1999.01": 1.669, "1999.02": 1.681,
                "1999.03": 1.696, "1999.04": 1.698, "1999.05": 1.695, "1999.06": 1.698, "1999.07": 1.709,
                "1999.08": 1.721, "1999.09": 1.737, "1999.10": 1.752, "1999.11": 1.765, "1999.12": 1.777,
                "2000.01": 1.789, "2000.02": 1.795, "2000.03": 1.801, "2000.04": 1.804, "2000.05": 1.805,
                "2000.06": 1.813, "2000.07": 1.826, "2000.08": 1.838, "2000.09": 1.847, "2000.10": 1.854,
                "2000.11": 1.861, "2000.12": 1.87, "2001.01": 1.881, "2001.02": 1.887, "2001.03": 1.895,
                "2001.04": 1.906, "2001.05": 1.918, "2001.06": 1.935, "2001.07": 1.955, "2001.08": 1.972,
                "2001.09": 1.982, "2001.10": 1.995, "2001.11": 2.004, "2001.12": 2.016, "2002.01": 2.026,
                "2002.02": 2.032, "2002.03": 2.041, "2002.04": 2.049, "2002.05": 2.053, "2002.06": 2.056,
                "2002.07": 2.074, "2002.08": 2.098, "2002.09": 2.131, "2002.10": 2.176, "2002.11": 2.236,
                "2002.12": 2.303, "2003.01": 2.364, "2003.02": 2.414, "2003.03": 2.45, "2003.04": 2.46,
                "2003.05": 2.459, "2003.06": 2.448, "2003.07": 2.446, "2003.08": 2.451, "2003.09": 2.463,
                "2003.10": 2.474, "2003.11": 2.482, "2003.12": 2.489, "2004.01": 2.509, "2004.02": 2.519,
                "2004.03": 2.524, "2004.04": 2.532, "2004.05": 2.548, "2004.06": 2.569, "2004.07": 2.589,
                "2004.08": 2.61, "2004.09": 2.621, "2004.10": 2.632, "2004.11": 2.649, "2004.12": 2.664,
                "2005.01": 2.677, "2005.02": 2.687, "2005.03": 2.709, "2005.04": 2.722, "2005.05": 2.722,
                "2005.06": 2.719, "2005.07": 2.715, "2005.08": 2.712, "2005.09": 2.715, "2005.10": 2.721,
                "2005.11": 2.723, "2005.12": 2.726, "2006.01": 2.737, "2006.02": 2.741, "2006.03": 2.743,
                "2006.04": 2.743, "2006.05": 2.745, "2006.06": 2.747, "2006.07": 2.748, "2006.08": 2.752,
                "2006.09": 2.755, "2006.10": 2.758, "2006.11": 2.762, "2006.12": 2.767, "2007.01": 2.773,
                "2007.02": 2.777, "2007.03": 2.782, "2007.04": 2.786, "2007.05": 2.789, "2007.06": 2.792,
                "2007.07": 2.796, "2007.08": 2.801, "2007.09": 2.808, "2007.10": 2.817, "2007.11": 2.829,
                "2007.12": 2.844, "2008.01": 2.856, "2008.02": 2.866, "2008.03": 2.876, "2008.04": 2.887,
                "2008.05": 2.906, "2008.06": 2.932, "2008.07": 2.957, "2008.08": 2.975, "2008.09": 2.988,
                "2008.10": 2.993, "2008.11": 2.989, "2008.12": 2.988, "2009.01": 2.99, "2009.02": 2.985,
                "2009.03": 2.977, "2009.04": 2.972, "2009.05": 2.972, "2009.06": 2.971, "2009.07": 2.97,
                "2009.08": 2.971, "2009.09": 2.973, "2009.10": 2.974, "2009.11": 2.974, "2009.12": 2.976,
                "2010.01": 2.989, "2010.02": 3.004, "2010.03": 3.02, "2010.04": 3.032, "2010.05": 3.042,
                "2010.06": 3.048, "2010.07": 3.05, "2010.08": 3.052, "2010.09": 3.059, "2010.10": 3.07,
                "2010.11": 3.085, "2010.12": 3.103, "2011.01": 3.121, "2011.02": 3.136, "2011.03": 3.154,
                "2011.04": 3.171, "2011.05": 3.189, "2011.06": 3.205, "2011.07": 3.218, "2011.08": 3.233,
                "2011.09": 3.251, "2011.10": 3.272, "2011.11": 3.293, "2011.12": 3.313, "2012.01": 3.331,
                "2012.02": 3.345, "2012.03": 3.357, "2012.04": 3.369, "2012.05": 3.378, "2012.06": 3.385,
                "2012.07": 3.39, "2012.08": 3.396, "2012.09": 3.404, "2012.10": 3.413, "2012.11": 3.422,
                "2012.12": 3.432, "2013.01": 3.444, "2013.02": 3.453, "2013.03": 3.462, "2013.04": 3.471,
                "2013.05": 3.479, "2013.06": 3.486, "2013.07": 3.492, "2013.08": 3.497, "2013.09": 3.504,
                "2013.10": 3.513, "2013.11": 3.523, "2013.12": 3.534, "2014.01": 3.546, "2014.02": 3.555,
                "2014.03": 3.565, "2014.04": 3.577, "2014.05": 3.59, "2014.06": 3.604, "2014.07": 3.615,
                "2014.08": 3.629, "2014.09": 3.647, "2014.10": 3.668, "2014.11": 3.691, "2014.12": 3.715,
                "2015.01": 3.74, "2015.02": 3.763, "2015.03": 3.792, "2015.04": 3.824, "2015.05": 3.857,
                "2015.06": 3.888, "2015.07": 3.916, "2015.08": 3.941, "2015.09": 3.964, "2015.10": 3.989,
                "2015.11": 4.015, "2015.12": 4.04, "2016.01": 4.068, "2016.02": 4.095, "2016.03": 4.124,
                "2016.04": 4.152, "2016.05": 4.18, "2016.06": 4.208, "2016.07": 4.237, "2016.08": 4.264,
                "2016.09": 4.289, "2016.10": 4.312, "2016.11": 4.334, "2016.12": 4.356, "2017.01": 4.375,
                "2017.02": 4.391, "2017.03": 4.405, "2017.04": 4.419, "2017.05": 4.432, "2017.06": 4.443,
                "2017.07": 4.453, "2017.08": 4.462, "2017.09": 4.471, "2017.10": 4.481, "2017.11": 4.491,
                "2017.12": 4.502, "2018.01": 4.514, "2018.02": 4.525, "2018.03": 4.535, "2018.04": 4.546,
                "2018.05": 4.557, "2018.06": 4.569, "2018.07": 4.582, "2018.08": 4.595, "2018.09": 4.608,
                "2018.10": 4.621, "2018.11": 4.633, "2018.12": 4.645, "2019.01": 4.658, "2019.02": 4.67,
                "2019.03": 4.682, "2019.04": 4.694, "2019.05": 4.705, "2019.06": 4.716, "2019.07": 4.726,
                "2019.08": 4.736, "2019.09": 4.747, "2019.10": 4.758, "2019.11": 4.77, "2019.12": 4.782,
                "2020.01": 4.795, "2020.02": 4.808, "2020.03": 4.821, "2020.04": 4.834, "2020.05": 4.847,
                "2020.06": 4.86, "2020.07": 4.874, "2020.08": 4.889, "2020.09": 4.905, "2020.10": 4.922,
                "2020.11": 4.94, "2020.12": 4.959, "2021.01": 4.979, "2021.02": 4.999, "2021.03": 5.021,
                "2021.04": 5.044, "2021.05": 5.068
            }

    def _calcular_ipca_acumulado(self, valor_inicial: float):
        """Baixa IPCA mensal e calcula índice acumulado a partir de 2021.06."""
        try:
            start = "202106"
            end = datetime.today().strftime("%Y%m")
            periodo = f"{start}-{end}"

            df = sidrapy.get_table(
                table_code="1737",
                territorial_level="1",
                ibge_territorial_code="all",
                variable="63",
                period=periodo,
                format="pandas"
            )[['D2C', 'V']][1:]

            df["V"] = df["V"].astype(float)

            acumulado = [valor_inicial]
            for i in range(1, len(df)):
                novo_valor = round(acumulado[-1] * (1 + df.loc[i, "V"] / 100), 4)
                acumulado.append(novo_valor)

            df["acumulado"] = acumulado

            ipca_dict = {
                f"{str(row['D2C'])[:4]}.{str(row['D2C'])[4:]}": row["acumulado"]
                for _, row in df.iterrows()
            }

            return ipca_dict
        
        except Exception:
            # Dados IPCA padrão caso API não funcione
            return {
                "2021.06": 1069.29, "2021.07": 1078.02, "2021.08": 1086.41, "2021.09": 1096.87,
                "2021.10": 1107.98, "2021.11": 1119.53, "2021.12": 1130.95, "2022.01": 1142.76,
                "2022.02": 1154.36, "2022.03": 1166.03, "2022.04": 1177.75, "2022.05": 1190.70,
                "2022.06": 1202.69, "2022.07": 1210.44, "2022.08": 1209.64, "2022.09": 1215.85,
                "2022.10": 1222.74, "2022.11": 1228.50, "2022.12": 1234.63, "2023.01": 1241.52,
                "2023.02": 1248.99, "2023.03": 1257.24, "2023.04": 1263.73, "2023.05": 1267.85,
                "2023.06": 1268.06, "2023.07": 1268.91, "2023.08": 1270.23, "2023.09": 1271.96,
                "2023.10": 1273.51, "2023.11": 1274.15, "2023.12": 1276.05, "2024.01": 1279.38,
                "2024.02": 1283.86, "2024.03": 1289.02, "2024.04": 1293.40, "2024.05": 1296.85,
                "2024.06": 1300.47, "2024.07": 1304.94, "2024.08": 1308.67, "2024.09": 1312.83,
                "2024.10": 1316.78, "2024.11": 1320.84, "2024.12": 1325.18, "2025.01": 1329.46
            }

    def buscar_indice_correcao(self, data: datetime) -> float:
        """Retorna o índice de correção (IGPM ou IPCA) para a data especificada."""
        ref = f"{data.year}.{data.month:02d}"
        if ref <= "2021.05":
            return float(self.indices_igpm.get(ref, 624.40))
        else:
            return float(self.indices_ipca.get(ref, 1329.46))

    def exibir_parametros(self):
        """Exibe os parâmetros atuais."""
        return {
            'taxa_multa': f"{self.taxa_multa:.2%}",
            'taxa_juros': f"{self.taxa_juros_mensal:.2%} ao mês"
        }
